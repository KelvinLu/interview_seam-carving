#!/usr/bin/env ruby

require 'chunky_png'

if ARGV.length > 0
  $stderr.puts "Usage: #{__FILE__} (program reads from standard input)"
  exit 1
end

width = nil
rows = []

begin
  while (row = $stdin.readline.split(',').compact)
    width ||= (length = row.length)
    raise "Row has mismatched number of elements (expected #{width}, got #{length})" unless width == length

    rows << row.map(&:to_f).map { |i|
      gray = [
        255,
        (255.0 * (i ** (0.454545))).to_i
      ].min

      ChunkyPNG::Color.rgb(gray, gray, gray)
    }
  end
rescue EOFError
end

image = ChunkyPNG::Canvas.new(width, rows.length)

for y in 0..(rows.length - 1)
  image.replace_row!(y, rows[y])
end

image.write($stdout)
